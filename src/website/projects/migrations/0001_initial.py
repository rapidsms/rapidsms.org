# Generated by Django 2.2.9 on 2020-01-14 12:59

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('packages', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taxonomy', '__first__'),
        ('datamaps', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('D', 'Draft'), ('R', 'Needs Review'), ('P', 'Published'), ('N', 'Denied')], default='D', help_text='To change status go back to the listing page and select the appropriate admin action.', max_length=1)),
                ('feature', models.BooleanField(default=False, verbose_name='Feature on Homepage')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField()),
                ('description', models.TextField()),
                ('started', models.DateField(blank=True, help_text='mm/dd/yyyy', null=True, verbose_name='Project start date')),
                ('challenges', models.TextField(blank=True, null=True)),
                ('audience', models.TextField(blank=True, null=True)),
                ('technologies', models.TextField(blank=True, null=True, verbose_name='Key technologies')),
                ('metrics', models.TextField(blank=True, null=True)),
                ('num_users', models.IntegerField(blank=True, choices=[(1, 'Under 100'), (2, '100 - 1,000'), (3, '1,000 - 5,000'), (4, '5,000 - 100,000'), (5, '100,000+')], default=1, help_text='Choose one of the options available.', null=True, verbose_name='Number of users')),
                ('repository_url', models.URLField(blank=True, help_text='Link to the public code repository for this project.', null=True)),
                ('script', models.TextField(blank=True, help_text='JS/JSON blob')),
                ('project_url', models.URLField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, help_text='Project Logo', null=True, upload_to='logos')),
                ('files', models.FileField(blank=True, null=True, upload_to='files', verbose_name='Attach a file')),
                ('collaborators', models.ManyToManyField(help_text='Users who have permission to edit this project.', related_name='projects', to=settings.AUTH_USER_MODEL)),
                ('countries', models.ManyToManyField(blank=True, to='datamaps.Country')),
                ('creator', models.ForeignKey(help_text='The creator of this content, who may or may not be its author.', on_delete=django.db.models.deletion.CASCADE, related_name='created_projects', to=settings.AUTH_USER_MODEL)),
                ('packages', models.ManyToManyField(blank=True, to='packages.Package')),
                ('tags', models.ManyToManyField(related_name='projects', to='taxonomy.Taxonomy', verbose_name='Taxonomy')),
            ],
            options={
                'ordering': ['-updated'],
            },
        ),
    ]
